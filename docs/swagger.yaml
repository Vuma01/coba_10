basePath: /api/v1
definitions:
  models.Address:
    properties:
      kota:
        type: string
      pos:
        type: string
    type: object
  models.OTPInfo:
    properties:
      attempt_count:
        description: Jumlah percobaan pengguna memasukkan OTP
        type: integer
      code:
        description: Kode OTP
        type: string
      expiry_time:
        description: Waktu kedaluwarsa OTP
        type: string
      generated_at:
        description: Waktu ketika OTP di-generate
        type: string
      is_used:
        description: Menandai apakah OTP sudah digunakan atau belum
        type: boolean
      last_tried_at:
        description: Waktu terakhir pengguna mencoba memasukkan OTP
        type: string
    type: object
  models.User:
    properties:
      address:
        $ref: '#/definitions/models.Address'
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      otp_info:
        $ref: '#/definitions/models.OTPInfo'
      password:
        minLength: 8
        type: string
      role:
        description: 'Misalnya: user, admin'
        enum:
        - user
        - admin
        type: string
      updated_at:
        type: string
      username:
        minLength: 4
        type: string
    required:
    - email
    - password
    - role
    - username
    type: object
  response.LoginResponse:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - password
    type: object
host: localhost:5000
info:
  contact: {}
  description: This is the API documentation for implementasi-gin-gonic-crud-jwt.
  title: Implementasi-gin-gonic-crud-jwt API
  version: 0.0.1
paths:
  /users/all:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get all users
      tags:
      - User
  /users/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a user
      tags:
      - User
  /users/delete/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a user
      tags:
      - User
  /users/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login details
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/response.LoginResponse'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login a user
      tags:
      - User Auth
  /users/search:
    get:
      consumes:
      - application/json
      parameters:
      - description: Partial Email
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Find users by partial email
      tags:
      - User
  /users/search/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      security:
      - ApiKeyAuth: []
      tags:
      - User
  /users/signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: Signup user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Signup a user
      tags:
      - User Auth
  /users/update/{id}:
    patch:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a user
      tags:
      - User
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
